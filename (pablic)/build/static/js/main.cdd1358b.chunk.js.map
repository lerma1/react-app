{"version":3,"sources":["components/navbar.js","store/note-list/actions.js","components/navbar-container.js","components/app.js","constants/colors.js","store/new-note/reducers.js","store/note/actions.js","store/note/reducers.js","store/note-list/reducers.js","fixtures.js","store/reducers.js","store/new-note/actions.js","components/color-menu/index.js","components/new-note/new-note_note-menu/new-note_dropdown-button/index.js","components/new-note/new-note_note-menu/index.js","components/new-note/index.js","components/new-note/new-note-container.js","components/about/index.js","components/statistic/index.js","components/statistic/statistics-container.js","components/note-menu/index.js","components/current-note/current-note_note-menu/new-note_dropdown-button/index.js","components/current-note/current-note_note-menu/index.js","components/current-note/index.js","components/current-note/current-note-container.js","components/note/index.js","components/note-list/index.js","components/note-list/note-list-container.js","index.js"],"names":["NoteNavbar","props","handleChange","bind","val","this","setViewNoteList","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","id","className","to","type","name","defaultValue","onChange","value","Component","isGirdView","payload","updateNotes","notes","NoteNavbarContainer","React","mapDispatchToProps","connect","state","App","children","colors","defaultState","title","text","img","color","isOpen","textBuffer","data","currentIndex","date","updateCurrentNote","isEditing","countCreateNotes","countDeleteNotes","combineReducers","newNote","action","note","noteList","ColorMenu","context","isChecked","e","setState","target","toLowerCase","trim","style","labeledBy","colorElements","map","index","overlay","tooltip","key","code","onClick","onSetColorNewNote","data-color","aria-labelledby","DropdownButton","url","handleClick","preventDefault","NewNoteNoteMenu","reDoButtonEnabled","onClickReDoNewNote","reDoButtonDisabled","disabled","unDoButtonEnabled","onClickUnDoNewNote","unDoButtonDisabled","saveButtonEnabled","onClickCreateNewNote","saveButtonDisabled","as","Menu","src","alt","enableUnDo","enableReDo","enableSave","NewNote","onClickNewNote","event","closest","closeNewNote","openNewNote","renderNewNoteOpen","find","item","placeholder","onTextChange","rows","length","renderNewNoteClose","addTextBuffer","timer","undefined","newNotes","concat","unshift","Date","setColor","setText","updateTextBuffer","setCountNewNotes","buffer","newBuffer","slice","push","document","getElementById","clearTimeout","setTimeout","getAttribute","unDoReDo","body","NewNoteContainer","createNewNote","About","Statistics","handler","alert","console","log","StatisticsContainer","NoteMenu","onClickDeleteNote","CurrentNoteMenu","onClickReDo","onClickUnDo","onClickSave","onSetColor","onClickDelete","CurrentNote","renderCurrentNoteOpen","onSetColorCurrentNote","onClickUnDoCurrentNote","onClickReDoCurrentNote","onClickSaveCurrentNote","onClickDeleteCurrentNote","findIndex","splice","setCountDeleteNotes","CurrentNoteContainer","saveNote","addImage","saveCurrentNote","addImageCurrentNote","Note","handleClose","handleShow","show","onHide","centered","size","NoteList","noteGirdClass","noteListGirdClass","noteElements","NoteListContainer","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","mainElem","render","exact","path","component"],"mappings":"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","file":"static/js/main.cdd1358b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default class NoteNavbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange (val) {\r\n        (val===1)? this.props.setViewNoteList(false):this.props.setViewNoteList(true);\r\n\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"dark\" >\r\n                <Navbar.Brand >myNotes</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Link to=\"/\" className=\"text-white m-3\">Заметки</Link>\r\n                        <Link to=\"/statistics\" className=\"text-white m-3\">Статистика</Link>\r\n                        <Link to=\"/about\" className=\"text-white m-3\">О программе</Link>\r\n                    </Nav>\r\n                    <Nav>\r\n                        <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}   onChange={this.handleChange} >\r\n                            <ToggleButton variant=\"outline-light\" value={1}>Список</ToggleButton>\r\n                            <ToggleButton variant=\"outline-light\" value={2}>Сетка</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n            ;\r\n    }\r\n}","\r\nexport const CHANGE_VIEW_NOTE_LIST = \"CHANGE_VIEW_NOTE_LIST\";\r\nexport const UPDATE_NOTES = \"UPDATE_NOTES\";\r\nexport const SET_COUNT_NEW_NOTES = \"SET_COUNT_NEW_NOTES\";\r\nexport const SET_COUNT_DELETE_NOTES = \"SET_COUNT_DELETE_NOTES\";\r\n\r\n\r\n\r\nexport const setViewNoteList = (isGirdView) => ({\r\n    type: CHANGE_VIEW_NOTE_LIST,\r\n    payload:isGirdView,\r\n});\r\n\r\nexport const updateNotes = (notes) => ({\r\n    type: UPDATE_NOTES,\r\n    payload:notes,\r\n});\r\n\r\nexport const setCountNewNotes = (countCreateNotes) => ({\r\n    type: SET_COUNT_NEW_NOTES,\r\n    payload:countCreateNotes,\r\n});\r\n\r\nexport const setCountDeleteNotes = (countDeleteNotes) => ({\r\n    type: SET_COUNT_DELETE_NOTES,\r\n    payload:countDeleteNotes,\r\n});\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport NoteNavbar from \"./navbar\";\r\nimport {setViewNoteList} from \"../store/note-list/actions\";\r\n\r\n\r\n\r\n\r\nclass NoteNavbarContainer extends React.Component {\r\n    render() {\r\n        return       <NoteNavbar\r\n\r\n            setViewNoteList={this.props.setViewNoteList}\r\n\r\n\r\n        />\r\n\r\n\r\n    }\r\n}\r\n//берет из Стейта какие-то значения и передает их в пропсы компонента\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n\r\n    };\r\n}\r\n//функция, которая будет наши экшн креэйтеры передавать в пропс\r\nconst mapDispatchToProps = {\r\n\r\n    setViewNoteList:setViewNoteList,\r\n\r\n}\r\n\r\n\r\n//привязываем контейнер к реаксу и экспортируем\r\nexport default connect(mapStateToProps,mapDispatchToProps)(NoteNavbarContainer);","import React, {Component} from 'react';\r\nimport notes from \"../fixtures\";\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n//import NoteListContainer  from \"./note-list/note-list-container.js\"\r\nimport NoteNavbarContainer from \"./navbar-container.js\"\r\n//import About from \"./about\";\r\n//import Statistics from \"./statistic\";\r\n\r\n\r\n\r\n\r\nconst App = ({children}) => (\r\n    <div>\r\n        <NoteNavbarContainer/>\r\n        {children}\r\n    </div>\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default App","export const WHITE = '#FFFFFF';\r\nexport const YELLOW = '#FFFB9F';\r\nexport const RED = '#FF727A';\r\nexport const BLUE = '#A9E4FF';\r\n\r\nexport  const colors = [\r\n    {'name':'WHITE','code':WHITE,'tooltip':'Белый'},\r\n    {'name':'YELLOW','code':YELLOW,'tooltip':'Желтый'},\r\n    {'name':'RED','code':RED,'tooltip':'Красный'},\r\n    {'name':'BLUE','code':BLUE,'tooltip':'Синий'}\r\n]\r\n","import {\r\n    ADD_IMAGE_IN_NEW_NOTE,\r\n    CHANGE_COLOR_NEW_NOTE,\r\n    CHANGE_TEXT_NEW_NOTE,\r\n    UN_DO_NEW_NOTE,\r\n    RE_DO_NEW_NOTE,\r\n    OPEN_NEW_NOTE,\r\n    CLOSE_NEW_NOTE,\r\n    UPDATE_TEXTBUFFER_NEW_NOTE,\r\n    CREATE_NEW_NOTE,\r\n\r\n} from './actions'\r\nimport {colors} from \"../../constants/colors\";\r\n\r\nconst defaultState = {\r\n    title: \"\",\r\n    text: \"\",\r\n    img: null,\r\n    color: colors[0].name,\r\n    isOpen: false,\r\n    colors: colors,\r\n    textBuffer: {data:[],currentIndex:-1},\r\n    date:\"\",\r\n}\r\n\r\nexport const newNoteReducer = (state = defaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case OPEN_NEW_NOTE: {\r\n            return {...state, isOpen: true };\r\n        }\r\n        case CLOSE_NEW_NOTE: {\r\n            return {...state, isOpen: false };\r\n        }\r\n        case ADD_IMAGE_IN_NEW_NOTE: {\r\n            return {...state, img: action.payload };\r\n        }\r\n        case CHANGE_COLOR_NEW_NOTE: {\r\n            return {...state, color: action.payload };\r\n        }\r\n        case CREATE_NEW_NOTE: {\r\n            return {...state, notes: action.payload };\r\n        }\r\n        case CHANGE_TEXT_NEW_NOTE: {\r\n            return {...state,  title: action.payload.title, text: action.payload.text };\r\n        }\r\n        case UPDATE_TEXTBUFFER_NEW_NOTE: {\r\n            return {...state,  textBuffer: action.payload.textBuffer };\r\n        }\r\n        case UN_DO_NEW_NOTE: {\r\n            return {...state, title: action.payload.title, text: action.payload.text,  textBuffer: action.payload.textBuffer };\r\n        }\r\n        case RE_DO_NEW_NOTE: {\r\n            return {...state, title: action.payload.title, text: action.payload.text,  textBuffer: action.payload.textBuffer };\r\n        }\r\n\r\n        default: return state;\r\n\r\n    }\r\n\r\n}\r\n","export const SAVE_CURRENT_NOTE = \"SAVE_CURRENT_NOTE\";\r\nexport const ADD_IMAGE_IN_CURRENT_NOTE=\"ADD_IMAGE_IN_CURRENT_NOTE\";\r\nexport const CHANGE_COLOR_CURRENT_NOTE=\"CHANGE_COLOR_CURRENT_NOTE\";\r\nexport const CHANGE_TEXT_CURRENT_NOTE=\"CHANGE_TEXT_CURRENT_NOTE\";\r\nexport const UN_DO_RE_DO_CURRENT_NOTE=\"UN_DO_RE_DO_CURRENT_NOTE\";\r\nexport const UPDATE_TEXTBUFFER_CURRENT_NOTE=\"UPDATE_TEXTBUFFER_CURRENT_NOTE\";\r\nexport const UPDATE_CURRENT_NOTE=\"UPDATE_CURRENT_NOTE\";\r\n\r\nexport const saveNote = (notes) => ({\r\n    type: SAVE_CURRENT_NOTE,\r\n    payload:notes,\r\n});\r\n\r\nexport const addImage = (img) => ({\r\n    type: ADD_IMAGE_IN_CURRENT_NOTE,\r\n    payload:img,\r\n});\r\n\r\nexport const setColor = (color) => ({\r\n    type: CHANGE_COLOR_CURRENT_NOTE,\r\n    payload:color,\r\n});\r\n\r\nexport const setText = (title, text) => ({\r\n    type: CHANGE_TEXT_CURRENT_NOTE,\r\n    payload:{text: text, title: title}\r\n});\r\n\r\nexport const updateTextBuffer = (textBuffer) => ({\r\n    type: UPDATE_TEXTBUFFER_CURRENT_NOTE,\r\n    payload:{textBuffer: textBuffer}\r\n});\r\n\r\nexport const unDoReDo = ( title, text, textBuffer) => ({\r\n    type: UN_DO_RE_DO_CURRENT_NOTE,\r\n    payload:{text: text, title: title, textBuffer: textBuffer}\r\n});\r\n\r\nexport const updateCurrentNote = (id, title, text, color, date, isEditing) => ({\r\n    type: UPDATE_CURRENT_NOTE,\r\n    payload: {id:id, text: text, title: title, color:color, date:date, textBuffer: {data:[],currentIndex:-1}, isEditing:isEditing}\r\n});\r\n\r\n","import {\r\n    SAVE_CURRENT_NOTE,\r\n    ADD_IMAGE_IN_CURRENT_NOTE,\r\n    CHANGE_COLOR_CURRENT_NOTE,\r\n    CHANGE_TEXT_CURRENT_NOTE,\r\n    UN_DO_RE_DO_CURRENT_NOTE,\r\n    UPDATE_TEXTBUFFER_CURRENT_NOTE,\r\n    UPDATE_CURRENT_NOTE}\r\n    from './actions'\r\nimport {colors} from \"../../constants/colors\";\r\n\r\n\r\nconst defaultState = {\r\n    title: \"\",\r\n    text: \"\",\r\n    img: null,\r\n    color: colors[0].name,\r\n    isEditing: false,\r\n    isOpen:true,\r\n    colors: colors,\r\n    textBuffer: {data:[],currentIndex:-1},\r\n    date:\"\",\r\n}\r\n\r\nexport const noteReducer = (state = defaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SAVE_CURRENT_NOTE: {\r\n            return {...state, notes: action.payload };\r\n        }\r\n        case ADD_IMAGE_IN_CURRENT_NOTE: {\r\n            return {...state, img: action.payload };\r\n        }\r\n        case CHANGE_COLOR_CURRENT_NOTE: {\r\n            return {...state, color: action.payload };\r\n        }\r\n        case CHANGE_TEXT_CURRENT_NOTE: {\r\n            return {...state,  title: action.payload.title, text: action.payload.text };\r\n        }\r\n        case UPDATE_TEXTBUFFER_CURRENT_NOTE: {\r\n            return {...state,  textBuffer: action.payload.textBuffer };\r\n        }\r\n        case UN_DO_RE_DO_CURRENT_NOTE: {\r\n            return {...state, title: action.payload.title, text: action.payload.text,  textBuffer: action.payload.textBuffer };\r\n        }\r\n        case UPDATE_CURRENT_NOTE: {\r\n            return {...state, id:action.payload.id, title: action.payload.title, text: action.payload.text, color: action.payload.color, date: action.payload.date,  textBuffer: action.payload.textBuffer, isEditing: action.payload.isEditing };\r\n        }\r\n        default: return state;\r\n\r\n    }\r\n\r\n}\r\n","import {CHANGE_VIEW_NOTE_LIST, UPDATE_NOTES,SET_COUNT_NEW_NOTES,SET_COUNT_DELETE_NOTES} from \"./actions\";\r\nimport notes from \"../../fixtures\";\r\nimport {colors} from \"../../constants/colors\";\r\n\r\n\r\nconst defaultState = {\r\n isGirdView: false,\r\n notes: notes,\r\n colors: colors,\r\n countCreateNotes:0,\r\n countDeleteNotes:0.\r\n\r\n}\r\n\r\nexport const noteListReducer = (state = defaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case CHANGE_VIEW_NOTE_LIST: {\r\n            return {...state, isGirdView: action.payload };\r\n        }\r\n        case UPDATE_NOTES: {\r\n            return {...state, notes: action.payload };\r\n        }\r\n        case SET_COUNT_NEW_NOTES: {\r\n            return {...state, countCreateNotes: action.payload };\r\n        }\r\n        case SET_COUNT_DELETE_NOTES: {\r\n            return {...state, countDeleteNotes: action.payload };\r\n        }\r\n\r\n        default: return state;\r\n\r\n    }\r\n\r\n}","export default [\r\n    {\r\n        \"id\": \"56c782f18990ecf954f6e027\",\r\n        \"date\": \"2016-06-09T15:03:23.000Z\",\r\n        \"color\":'WHITE',\r\n        \"img\" : \"https://www.gastronom.ru/binfiles/images/20161024/b5c63d06.jpg\",\r\n        \"title\": \"Заметка с картинкой\",\r\n        \"text\": \"Может быть когда-нибудь сюда можно будет добавлять картинки...\",\r\n        \"isEditing\": false,\r\n    },\r\n    {\r\n        \"id\": \"56c782f17b4e0ba78c7ad717\",\r\n        \"date\": \"2016-04-09T18:03:23.000Z\",\r\n        \"color\":'WHITE',\r\n        \"title\": \"Создай свою первую заметку\",\r\n        \"text\": \"Не нужно ничего запоминать - просто запиши это здесь в новую заметку, и информация всегда будет под рукой!\",\r\n        \"isEditing\": false,\r\n    },\r\n    {\r\n        \"id\": \"56c782f1978fdf9a0100df52\",\r\n        \"date\": \"2016-06-02T11:03:23.000Z\",\r\n        \"color\":'YELLOW',\r\n        \"title\": \"Создай свою вторую заметку и выбери ее цвет\",\r\n        \"text\": \"Сохрани здесь полезную ссылку или что-нибудь еще в этом роде. Выдели заметку цветом, если это необходимо.\",\r\n        \"isEditing\": false,\r\n    },\r\n    {\r\n        \"id\": \"56c782f1e17f4f9311dfaa2c\",\r\n        \"date\": \"2016-05-19T23:03:23.000Z\",\r\n        \"color\":'WHITE',\r\n        \"title\": \"Редактирование заметок\",\r\n        \"text\": \"Если ты написал в заметке какую-то ерунду - не переживай! Просто исправь свою писанину на правильную и нужную информацию!\",\r\n        \"isEditing\": false,\r\n    },\r\n    {\r\n        \"id\": \"56c782f197fe2bad471b3740\",\r\n        \"date\": \"2016-06-04T15:03:23.000Z\",\r\n        \"color\":'WHITE',\r\n        \"title\": \"Удаление заметок\",\r\n        \"text\": \"Заметка стала не актуальной? - Просто удали ее.\",\r\n        \"isEditing\": false,\r\n    }\r\n\r\n]","import {combineReducers} from \"redux\";\r\nimport {newNoteReducer} from \"./new-note/reducers\";\r\nimport {noteReducer} from \"./note/reducers\";\r\nimport {noteListReducer} from \"./note-list/reducers\";\r\n\r\n\r\nexport  default combineReducers({\r\n    newNote: newNoteReducer,\r\n    note: noteReducer,\r\n    noteList: noteListReducer ,\r\n});","\r\nexport const OPEN_NEW_NOTE = \"OPEN_NEW_NOTE\";\r\nexport const CLOSE_NEW_NOTE = \"CLOSE_NEW_NOTE\";\r\nexport const CREATE_NEW_NOTE = \"CREATE_NEW_NOTE\";\r\nexport const ADD_IMAGE_IN_NEW_NOTE=\"ADD_IMAGE_IN_NEW_NOTE\";\r\nexport const CHANGE_COLOR_NEW_NOTE=\"CHANGE_COLOR_NEW_NOTE\";\r\nexport const CHANGE_TEXT_NEW_NOTE=\"CHANGE_TEXT_NEW_NOTE\";\r\nexport const UN_DO_NEW_NOTE=\"UN_DO_NEW_NOTE\";\r\nexport const RE_DO_NEW_NOTE=\"RE_DO_NEW_NOTE\";\r\nexport const UPDATE_TEXTBUFFER_NEW_NOTE=\"UPDATE_TEXTBUFFER_NEW_NOTE\";\r\n\r\n\r\nexport const openNewNote = () => ({\r\n    type: OPEN_NEW_NOTE,\r\n\r\n});\r\n\r\nexport const closeNewNote = () => ({\r\n    type: CLOSE_NEW_NOTE,\r\n\r\n});\r\n\r\nexport const createNewNote = (notes) => ({\r\n    type: CREATE_NEW_NOTE,\r\n    payload:notes,\r\n});\r\n\r\nexport const addImage = (img) => ({\r\n    type: ADD_IMAGE_IN_NEW_NOTE,\r\n    payload:img,\r\n});\r\n\r\nexport const setColor = (color) => ({\r\n    type: CHANGE_COLOR_NEW_NOTE,\r\n    payload:color,\r\n});\r\n\r\nexport const setText = (title, text) => ({\r\n    type: CHANGE_TEXT_NEW_NOTE,\r\n    payload:{text: text, title: title}\r\n});\r\n\r\nexport const updateTextBuffer = (textBuffer) => ({\r\n    type: UPDATE_TEXTBUFFER_NEW_NOTE,\r\n    payload:{textBuffer: textBuffer}\r\n});\r\n\r\nexport const unDoReDo = ( title, text, textBuffer) => ({\r\n    type: UN_DO_NEW_NOTE,\r\n    payload:{text: text, title: title, textBuffer: textBuffer}\r\n});\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport './style.css'\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\n\r\n\r\n\r\n\r\nclass ColorMenu extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = { isChecked: this.props.color};\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ value: e.target.value.toLowerCase().trim() });\r\n    }\r\n\r\n    render() {\r\n        const {style,className,'aria-labelledby': labeledBy} = this.props;\r\n\r\n        const colorElements = this.props.colors.map((color, index) =>\r\n            <OverlayTrigger  overlay={ <Tooltip >{color.tooltip}</Tooltip>}><button key ={color.code} className=\"color-menu_button \" onClick={this.props.onSetColorNewNote} style={{\"background-color\": color.code}}  data-color = {color.name} >\r\n                {color.name===this.props.color?'✔':''}\r\n            </button></OverlayTrigger>);\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div style={style} className={className} aria-labelledby={labeledBy}>\r\n            <div className=\"d-inline-flex  p-2 flex-row  \"  >\r\n                {colorElements}\r\n             </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ColorMenu\r\n\r\n","import React  from 'react';\r\n\r\n\r\nexport default class DropdownButton extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.url = props.url;\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(e) {\r\n        e.preventDefault();\r\n        this.props.onClick(e);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button onClick={this.handleClick} className=\"btn  m-1 dropdown-toggle note-menu__img-button\"  style={{\"background-image\":this.url,'background-origin': 'border-box',\r\n                'background-repeat': 'no-repeat',\r\n                'width': '20px',\r\n                'height': '20px',}} />\r\n\r\n        );\r\n    }\r\n}","//import Util from \"bootstrap/js/src/util\";\r\nimport React, {Component} from 'react';\r\nimport ColorMenu from \"../../color-menu\";\r\nimport DropdownButton from \"./new-note_dropdown-button\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport './style.css'\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\n\r\nclass NewNoteNoteMenu extends Component {\r\n\r\n    render() {\r\n       let reDoButtonEnabled =\r\n           <button\r\n            className=\"btn note-menu__img-button m-1\"\r\n            style={{\"background-image\":\"url(icon/repeat.png)\"}}\r\n            onClick= {this.props.onClickReDoNewNote}\r\n        />;\r\n\r\n       let reDoButtonDisabled =\r\n           <span className=\"d-inline-block\"><button disabled\r\n            className=\"btn note-menu__img-button m-1\"\r\n            style={{\"background-image\":\"url(icon/repeat-d.png)\"}}\r\n        /></span>;\r\n\r\n       let unDoButtonEnabled = <button\r\n           className=\"btn note-menu__img-button m-1\"\r\n           style={{\"background-image\":\"url(icon/cancel.png)\"}}\r\n           onClick= {this.props.onClickUnDoNewNote}\r\n       />;\r\n\r\n        let unDoButtonDisabled = <span className=\"d-inline-block\"><button disabled\r\n            className=\"btn note-menu__img-button m-1\"\r\n            style={{\"background-image\":\"url(icon/cancel-d.png)\"}}\r\n         /></span>;\r\n\r\n        let saveButtonEnabled =\r\n            <button  className=\"btn w-auto text-secondary  float-right btn-sm note-menu__opticality-1 ml-auto btn-w-120\" onClick={this.props.onClickCreateNewNote}>\r\n                <h5>Сохранить</h5>\r\n            </button>\r\n       ;\r\n\r\n        let saveButtonDisabled =\r\n            <button  disabled className=\"btn w-auto text-secondary  float-right btn-sm note-menu__opticality-1 ml-auto btn-w-120\" >\r\n                <h5>Сохранить</h5>\r\n            </button>\r\n        ;\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div className=\"d-flex align-items-center w-100 dropdown \" >\r\n                <OverlayTrigger overlay={ <Tooltip >Выбрать цвет заметки</Tooltip>}>\r\n                <Dropdown className=\"d-inline-block\">\r\n                    <Dropdown.Toggle as={DropdownButton} id=\"dropdown-custom-components\" url = \"url(icon/new-color.png)\"/>\r\n                    <Dropdown.Menu as={ColorMenu} color = {this.props.color} colors = {this.props.colors} onSetColorNewNote = {this.props.onSetColorNewNote}/>\r\n                </Dropdown>\r\n                </OverlayTrigger >\r\n               <img src=\"icon/more.png\" alt=\"Разделитель\" ></img>\r\n                <OverlayTrigger  overlay={ <Tooltip >Отменить</Tooltip>}>\r\n                    {(this.props.enableUnDo) ? unDoButtonEnabled : unDoButtonDisabled}\r\n                </OverlayTrigger>\r\n                <OverlayTrigger overlay={ <Tooltip >Повторить</Tooltip>}>\r\n                    {(this.props.enableReDo) ? reDoButtonEnabled : reDoButtonDisabled}\r\n                </OverlayTrigger>\r\n                <OverlayTrigger overlay={ <Tooltip >Сохранить заметку</Tooltip>}>\r\n                    {(this.props.enableSave) ? saveButtonEnabled : saveButtonDisabled}\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewNoteNoteMenu\r\n\r\n/*<input type=\"file\" className=\"btn note-menu__img-button m-1\" style={{\"background-image\":\"url(icon/new-image.png)\"}} data-trigger=\"hover\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Добавить картинку\" />*/\r\n","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\r\n\r\nimport NewNoteNoteMenu from './new-note_note-menu/index.js';\r\nimport './style.css'\r\n\r\n\r\nclass NewNote extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n\r\n        this.onTextChange = this.onTextChange.bind(this);\r\n        this.onClickNewNote = this.onClickNewNote.bind(this);\r\n        this.onSetColorNewNote = this.onSetColorNewNote.bind(this);\r\n        this.onClickUnDoNewNote = this.onClickUnDoNewNote.bind(this);\r\n        this.onClickReDoNewNote = this.onClickReDoNewNote.bind(this);\r\n        this.addTextBuffer = this.addTextBuffer.bind(this);\r\n        this.onClickCreateNewNote = this.onClickCreateNewNote.bind(this);\r\n        this.timer = undefined;\r\n\r\n    }\r\n\r\n    onClickCreateNewNote(){\r\n\r\n\r\n        let newNotes = this.props.notes.concat();\r\n        newNotes.unshift({title: this.props.title, text: this.props.text,date: new Date(), id:( \"id\" + new Date()),color: this.props.color,isOpen: false});\r\n\r\n        this.props.updateNotes(newNotes);\r\n\r\n        this.props.setColor(this.props.colors[0].name);\r\n        this.props.setText(\"\", \"\");\r\n        this.props.updateTextBuffer({data:[],currentIndex:-1});\r\n        this.props.closeNewNote();\r\n        this.props.setCountNewNotes(this.props.countCreateNotes+1);\r\n\r\n    }\r\n\r\n    addTextBuffer(title, text, buffer){\r\n        let newBuffer = buffer;\r\n        if((newBuffer.currentIndex + 1) < newBuffer.data.length)\r\n               newBuffer.data = newBuffer.data.slice(0,newBuffer.currentIndex);\r\n\r\n        newBuffer.data.push ({title: title, text: text});\r\n        newBuffer.currentIndex++;\r\n\r\n        return newBuffer;\r\n    }\r\n\r\n    onTextChange() {\r\n        let text = document.getElementById(\"text-new-note\").value;\r\n        let title = document.getElementById(\"title-new-note\").value;\r\n\r\n\r\n        this.props.setText(title, text);\r\n        if(this.props.textBuffer.currentIndex===-1){let buffer = this.addTextBuffer(title,text,this.props.textBuffer);this.props.updateTextBuffer(buffer);}\r\n         else {\r\n            clearTimeout(this.timer);\r\n            this.timer = setTimeout(() => {\r\n                let buffer = this.addTextBuffer(title, text, this.props.textBuffer);\r\n                this.props.updateTextBuffer(buffer);\r\n            }, 200);\r\n        }\r\n        }\r\n\r\n\r\n    onClickNewNote = (event) =>{\r\n        event.target.closest('.new-note_button_close')? this.props.closeNewNote(): this.props.openNewNote();\r\n    }\r\n\r\n    onSetColorNewNote(event) {\r\n          this.props.setColor(event.target.getAttribute('data-color'));\r\n    }\r\n\r\n    onClickUnDoNewNote() {\r\n\r\n        if (this.props.textBuffer.currentIndex === -1) return;\r\n\r\n        this.props.textBuffer.currentIndex--;\r\n        var title = (this.props.textBuffer.currentIndex >= 0) ? this.props.textBuffer.data[this.props.textBuffer.currentIndex].title : \"\";\r\n        var text = (this.props.textBuffer.currentIndex >= 0) ? this.props.textBuffer.data[this.props.textBuffer.currentIndex].text : \"\";\r\n\r\n        this.props.unDoReDo(title, text, this.props.textBuffer  );\r\n\r\n    }\r\n\r\n    onClickReDoNewNote() {\r\n\r\n            if (this.props.textBuffer.currentIndex + 1 >= this.props.textBuffer.data.length) return;\r\n\r\n            this.props.textBuffer.currentIndex++;\r\n            let title = this.props.textBuffer.data[this.props.textBuffer.currentIndex].title;\r\n            let text = this.props.textBuffer.data[this.props.textBuffer.currentIndex].text;\r\n\r\n            this.props.unDoReDo(title, text, this.props.textBuffer);\r\n        }\r\n\r\n\r\n\r\n    renderNewNoteOpen = () =>{\r\n\r\n        return (\r\n                <div className=\"new-note card-body \" style={{\"background-color\": this.props.colors.find(item => item.name === this.props.color ).code}}>\r\n                    <h2>\r\n                        <input\r\n                            id = \"title-new-note\"\r\n                            className=\"new-note__input w-100 text-secondary\"\r\n                            type=\"text\"\r\n                            placeholder=\"Новая заметка...\"\r\n                            value={this.props.title}\r\n                            onChange={this.onTextChange}\r\n                        />\r\n                    </h2>\r\n                    <h4>\r\n                        <textarea\r\n                            id = \"text-new-note\"\r\n                            className=\"new-note__input w-100 text-secondary\"\r\n                            type=\"text\"\r\n                            rows = \"4\"\r\n                            placeholder=\"Текст заметки...\"\r\n                            value={this.props.text}\r\n                            onChange={this.onTextChange}\r\n                        />\r\n                    </h4>\r\n                    <div className=\"m-0\">\r\n                        <NewNoteNoteMenu\r\n                            color = {this.props.color}\r\n                            colors = {this.props.colors}\r\n                            onSetColorNewNote = {this.onSetColorNewNote}\r\n                            onClickUnDoNewNote = {this.onClickUnDoNewNote}\r\n                            onClickReDoNewNote = {this.onClickReDoNewNote}\r\n                            onClickCreateNewNote = {this.onClickCreateNewNote}\r\n                            enableUnDo = {this.props.textBuffer.currentIndex > -1}\r\n                            enableReDo = {(this.props.textBuffer.currentIndex + 1) < this.props.textBuffer.data.length}\r\n                            enableSave = {this.props.text.length>0||this.props.title.length>0}\r\n                         />\r\n\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n\r\n    renderNewNoteClose = () =>{\r\n        return (\r\n                <div className=\"card-body\" >\r\n                    <h2><input className=\"new-note__input w-100 text-secondary\" type=\"text\"  placeholder=\"Новая заметка...\" onClick={this.onClickNewNote} value={this.props.text} ></input></h2>\r\n                </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var body = this.props.isOpen?this.renderNewNoteOpen():this.renderNewNoteClose();\r\n\r\n        return (\r\n            <div className=\"card shadow \" >\r\n                {body}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewNote","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport NewNote from \"./index\";\r\nimport {setText, openNewNote, closeNewNote, setColor, unDoReDo, updateTextBuffer, createNewNote} from '../../store/new-note/actions.js'\r\nimport {updateNotes,setCountNewNotes} from \"../../store/note-list/actions\";\r\n\r\nclass NewNoteContainer extends React.Component {\r\n     render() {\r\n         return       <NewNote\r\n             title={this.props.title}\r\n             text={this.props.text}\r\n             isOpen={this.props.isOpen}\r\n             color={this.props.color}\r\n             colors={this.props.colors}\r\n             textBuffer={this.props.textBuffer}\r\n             countCreateNotes={this.props.countCreateNotes}\r\n\r\n             openNewNote={this.props.openNewNote}\r\n             closeNewNote={this.props.closeNewNote}\r\n             updateTextBuffer={this.props.updateTextBuffer}\r\n             setText={this.props.setText}\r\n             setColor={this.props.setColor}\r\n             unDoReDo={this.props.unDoReDo}\r\n\r\n             createNewNote={this.props.createNewNote}\r\n             updateNotes={this.props.updateNotes}\r\n             setCountNewNotes={this.props.setCountNewNotes}\r\n\r\n\r\n             notes={this.props.notes}\r\n         />\r\n\r\n\r\n     }\r\n }\r\n//берет из Стейта какие-то значения и передает их в пропсы компонента\r\nconst mapStateToProps = (state) => {\r\n     return{\r\n         title: state.newNote.title,\r\n         text: state.newNote.text,\r\n         isOpen:state.newNote.isOpen,\r\n         color:state.newNote.color,\r\n         colors: state.noteList.colors,\r\n         textBuffer: state.newNote.textBuffer,\r\n         notes:state.noteList.notes,\r\n         countCreateNotes:state.noteList.countCreateNotes,\r\n\r\n     };\r\n}\r\n//функция, которая будет наши экшн креэйтеры передавать в пропс\r\nconst mapDispatchToProps = {\r\n\r\n    setText:setText,\r\n    openNewNote: openNewNote,\r\n    closeNewNote:closeNewNote,\r\n    setColor:setColor,\r\n    unDoReDo:unDoReDo,\r\n\r\n    updateTextBuffer:updateTextBuffer,\r\n    createNewNote: createNewNote,\r\n    updateNotes:updateNotes,\r\n\r\n    setCountNewNotes:setCountNewNotes,\r\n\r\n}\r\n\r\n\r\n//привязываем контейнер к реаксу и экспортируем\r\nexport default connect(mapStateToProps,mapDispatchToProps)(NewNoteContainer);","\r\nimport React, {Component} from 'react';\r\nimport NewNoteContainer from \"../new-note/new-note-container\";\r\n\r\n\r\nclass About extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className= \"card-body mx-auto\" style={{\"max-width\":\"1200px\"}} >\r\n\r\n                    <h3 className=\"text-center\">myNotes</h3>\r\n                    <h5 className=\"text-center\">version 0.0.1</h5>\r\n                    <p className=\"text-center\">Отличный сайт, можно оставлять тут свои заметки.</p>\r\n\r\n                    <img className=\"d-block w-50 mx-auto\" src=\"https://avatanplus.com/files/resources/mid/57517d7dc6c2115516523376.png\"/>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default About\r\n\r\n","\r\nimport React, {Component} from 'react';\r\n\r\n\r\nclass Statistics extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handler = this.handler.bind(this);\r\n    }\r\n\r\n    handler(){\r\n        alert(this.props);\r\n        console.log(this.props);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className= \"card-body mx-auto\" style={{\"max-width\":\"1200px\"}} >\r\n\r\n                <h3 className=\"text-center mb-5\">Статистика</h3>\r\n\r\n\r\n                <p className=\"text-center\">Создано заметок: {this.props.countCreateNotes}</p>\r\n                <p className=\"text-center\">Удалено заметок: {this.props.countDeleteNotes}</p>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Statistics\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Statistics from './index.js';\r\n\r\n\r\n\r\nclass StatisticsContainer extends React.Component {\r\n    render() {\r\n        return   (  <Statistics\r\n            countCreateNotes={this.props.countCreateNotes}\r\n            countDeleteNotes={this.props.countDeleteNotes}\r\n\r\n\r\n        />)\r\n\r\n\r\n    }\r\n}\r\n//берет из Стейта какие-то значения и передает их в пропсы компонента\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        countCreateNotes: state.noteList.countCreateNotes,\r\n        countDeleteNotes: state.noteList.countDeleteNotes,\r\n\r\n    };\r\n}\r\n//функция, которая будет наши экшн креэйтеры передавать в пропс\r\nconst mapDispatchToProps = {\r\n\r\n\r\n}\r\n\r\n\r\n//привязываем контейнер к реаксу и экспортируем\r\nexport default connect(mapStateToProps,mapDispatchToProps)(StatisticsContainer);","import React, {Component} from 'react';\r\nimport './style.css'\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"../new-note/new-note_note-menu/new-note_dropdown-button\";\r\n\r\n\r\nclass NoteMenu extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"d-flex align-items-center w-100 \">\r\n\r\n\r\n                <OverlayTrigger overlay={ <Tooltip >Удалить заметку</Tooltip>}>\r\n                    <button\r\n                        className=\"btn  m-2 float-right note-menu__delete-button ml-auto text-white\"\r\n                        style={{\"background-image\":\"url(icon/trash-can.png)\"}}\r\n                        onClick={this.props.onClickDeleteNote}\r\n                    >. </button>\r\n                </OverlayTrigger>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoteMenu\r\n","import React  from 'react';\r\n\r\n\r\nexport default class DropdownButton extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.url = props.url;\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(e) {\r\n        e.preventDefault();\r\n        this.props.onClick(e);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button onClick={this.handleClick} className=\"btn  m-1 dropdown-toggle note-menu__img-button\"  style={{\"background-image\":this.url,'background-origin': 'border-box',\r\n                'background-repeat': 'no-repeat',\r\n                'width': '20px',\r\n                'height': '20px',}} />\r\n\r\n        );\r\n    }\r\n}","//import Util from \"bootstrap/js/src/util\";\r\nimport React, {Component} from 'react';\r\nimport ColorMenu from \"../../color-menu\";\r\nimport DropdownButton from \"./new-note_dropdown-button\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport './style.css'\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\n\r\nclass CurrentNoteMenu extends Component {\r\n\r\n    render() {\r\n       let reDoButtonEnabled =\r\n           <button\r\n            className=\"btn note-menu__img-button m-1\"\r\n            style={{\"background-image\":\"url(icon/repeat.png)\"}}\r\n            onClick= {this.props.onClickReDo}\r\n        />;\r\n\r\n       let reDoButtonDisabled =\r\n           <span className=\"d-inline-block\"><button disabled\r\n            className=\"btn note-menu__img-button m-1\"\r\n            style={{\"background-image\":\"url(icon/repeat-d.png)\"}}\r\n        /></span>;\r\n\r\n       let unDoButtonEnabled = <button\r\n           className=\"btn note-menu__img-button m-1\"\r\n           style={{\"background-image\":\"url(icon/cancel.png)\"}}\r\n           onClick= {this.props.onClickUnDo}\r\n       />;\r\n\r\n        let unDoButtonDisabled = <span className=\"d-inline-block\"><button disabled\r\n            className=\"btn note-menu__img-button m-1\"\r\n            style={{\"background-image\":\"url(icon/cancel-d.png)\"}}\r\n         /></span>;\r\n\r\n        let saveButtonEnabled =\r\n            <button  className=\"btn  text-secondary  float-right btn-sm note-menu__opticality-1 btn-w-120\" onClick= {this.props.onClickSave}>\r\n                <h5>Сохранить</h5>\r\n            </button>\r\n        ;\r\n\r\n        let saveButtonDisabled =\r\n            <button  disabled className=\"btn  text-secondary  float-right btn-sm note-menu__opticality-1 btn-w-120\" >\r\n                <h5>Сохранить</h5>\r\n            </button>\r\n        ;\r\n\r\n        return (\r\n\r\n            <div className=\"d-flex align-items-center w-100 dropdown \" >\r\n                <OverlayTrigger overlay={ <Tooltip >Выбрать цвет заметки</Tooltip>}>\r\n                <Dropdown className=\"d-inline-block\">\r\n                    <Dropdown.Toggle as={DropdownButton} id=\"dropdown-custom-components\" url = \"url(icon/new-color.png)\"/>\r\n                    <Dropdown.Menu as={ColorMenu} color = {this.props.color} colors = {this.props.colors} onSetColorNewNote = {this.props.onSetColor}/>\r\n                </Dropdown>\r\n                </OverlayTrigger >\r\n               <img src=\"icon/more.png\" alt=\"Разделитель\" ></img>\r\n                <OverlayTrigger  overlay={ <Tooltip >Отменить</Tooltip>}>\r\n                    {(this.props.enableUnDo) ? unDoButtonEnabled : unDoButtonDisabled}\r\n                </OverlayTrigger>\r\n                <OverlayTrigger overlay={ <Tooltip >Повторить</Tooltip>}>\r\n                    {(this.props.enableReDo) ? reDoButtonEnabled : reDoButtonDisabled}\r\n                </OverlayTrigger>\r\n                <OverlayTrigger overlay={ <Tooltip >Удалить заметку</Tooltip>}>\r\n                    <button className=\"btn  text-secondary  float-right btn-sm note-menu__opticality-1 ml-auto btn-w-120 \" onClick={this.props.onClickDelete}><h5>Удалить</h5></button>\r\n                </OverlayTrigger>\r\n                <OverlayTrigger overlay={ <Tooltip >Сохранить заметку</Tooltip>}>\r\n                    {(this.props.enableSave) ? saveButtonEnabled : saveButtonDisabled}\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CurrentNoteMenu\r\n\r\n","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\r\n\r\nimport CurrentNoteMenu from './current-note_note-menu/index.js';\r\nimport './style.css'\r\n\r\n\r\nclass CurrentNote extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n\r\n        this.onTextChange = this.onTextChange.bind(this);\r\n        this.onSetColorCurrentNote = this.onSetColorCurrentNote.bind(this);\r\n        this.onClickUnDoCurrentNote = this.onClickUnDoCurrentNote.bind(this);\r\n        this.onClickReDoCurrentNote = this.onClickReDoCurrentNote.bind(this);\r\n        this.addTextBuffer = this.addTextBuffer.bind(this);\r\n        this.onClickSaveCurrentNote = this.onClickSaveCurrentNote.bind(this);\r\n        this.onClickDeleteCurrentNote = this.onClickDeleteCurrentNote.bind(this);\r\n        this.timer = undefined;\r\n\r\n    }\r\n\r\n    onClickSaveCurrentNote(){\r\n\r\n\r\n        let index = this.props.notes.findIndex(item => item.id === this.props.id );\r\n        let newNotes = this.props.notes.concat();\r\n        newNotes[index] = {title: this.props.title, text: this.props.text,date: new Date(), id: this.props.title,color: this.props.color,isEditing: false};\r\n        this.props.updateNotes(newNotes);\r\n\r\n\r\n    }\r\n\r\n    onClickDeleteCurrentNote(){\r\n        let index = this.props.notes.findIndex(item => item.id === this.props.id );\r\n        let notes = this.props.notes.slice();\r\n\r\n        notes.splice(index,1);\r\n        this.props.updateNotes(notes);\r\n        this.props.setCountDeleteNotes(this.props.countDeleteNotes+1);\r\n    }\r\n\r\n    addTextBuffer(title, text, buffer){\r\n        let newBuffer = buffer;\r\n        if((newBuffer.currentIndex + 1) < newBuffer.data.length)\r\n               newBuffer.data = newBuffer.data.slice(0,newBuffer.currentIndex);\r\n\r\n        newBuffer.data.push ({title: title, text: text});\r\n        newBuffer.currentIndex++;\r\n\r\n        return newBuffer;\r\n    }\r\n\r\n    onTextChange() {\r\n        let text = document.getElementById(\"text-current-note\").value;\r\n        let title = document.getElementById(\"title-current-note\").value;\r\n\r\n\r\n        this.props.setText(title, text);\r\n        if(this.props.textBuffer.currentIndex===-1){let buffer = this.addTextBuffer(title,text,this.props.textBuffer);this.props.updateTextBuffer(buffer);}\r\n         else {\r\n            clearTimeout(this.timer);\r\n            this.timer = setTimeout(() => {\r\n                let buffer = this.addTextBuffer(title, text, this.props.textBuffer);\r\n                this.props.updateTextBuffer(buffer);\r\n            }, 200);\r\n        }\r\n        }\r\n\r\n\r\n\r\n\r\n    onSetColorCurrentNote(event) {\r\n          this.props.setColor(event.target.getAttribute('data-color'));\r\n    }\r\n\r\n    onClickUnDoCurrentNote() {\r\n\r\n        if (this.props.textBuffer.currentIndex === -1) return;\r\n\r\n        this.props.textBuffer.currentIndex--;\r\n        var title = (this.props.textBuffer.currentIndex >= 0) ? this.props.textBuffer.data[this.props.textBuffer.currentIndex].title : \"\";\r\n        var text = (this.props.textBuffer.currentIndex >= 0) ? this.props.textBuffer.data[this.props.textBuffer.currentIndex].text : \"\";\r\n\r\n        this.props.unDoReDo(title, text, this.props.textBuffer  );\r\n\r\n    }\r\n\r\n    onClickReDoCurrentNote() {\r\n\r\n            if (this.props.textBuffer.currentIndex + 1 >= this.props.textBuffer.data.length) return;\r\n\r\n            this.props.textBuffer.currentIndex++;\r\n            let title = this.props.textBuffer.data[this.props.textBuffer.currentIndex].title;\r\n            let text = this.props.textBuffer.data[this.props.textBuffer.currentIndex].text;\r\n\r\n            this.props.unDoReDo(title, text, this.props.textBuffer);\r\n        }\r\n\r\n\r\n\r\n    renderCurrentNoteOpen = () =>{\r\n\r\n        return (\r\n                <div className=\"new-note card-body \" style={{\"background-color\": this.props.colors.find(item => item.name === this.props.color ).code}}>\r\n                    <h2>\r\n                        <input\r\n                            id = \"title-current-note\"\r\n                            className=\"new-note__input w-100 text-secondary\"\r\n                            type=\"text\"\r\n                            placeholder=\"Новая заметка...\"\r\n                            value={this.props.title}\r\n                            onChange={this.onTextChange}\r\n                        />\r\n                    </h2>\r\n                    <h4>\r\n                        <textarea\r\n                            id = \"text-current-note\"\r\n                            className=\"new-note__input w-100 text-secondary\"\r\n                            type=\"text\"\r\n                            rows = \"4\"\r\n                            placeholder=\"Текст заметки...\"\r\n                            value={this.props.text}\r\n                            onChange={this.onTextChange}\r\n                        />\r\n                    </h4>\r\n                    <div className=\"m-0\">\r\n                        <CurrentNoteMenu\r\n                            color = {this.props.color}\r\n                            colors = {this.props.colors}\r\n                            onSetColor = {this.onSetColorCurrentNote}\r\n                            onClickUnDo = {this.onClickUnDoCurrentNote}\r\n                            onClickReDo = {this.onClickReDoCurrentNote}\r\n                            onClickSave = {this.onClickSaveCurrentNote}\r\n                            onClickDelete = {this.onClickDeleteCurrentNote}\r\n                            enableUnDo = {this.props.textBuffer.currentIndex > -1}\r\n                            enableReDo = {(this.props.textBuffer.currentIndex + 1) < this.props.textBuffer.data.length}\r\n                            enableSave = {this.props.text.length>0||this.props.title.length>0}\r\n                         />\r\n\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        var body = this.renderCurrentNoteOpen();\r\n\r\n        return (\r\n            <div className=\"card shadow \" >\r\n                {body}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CurrentNote","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport CurrentNote from '../current-note/index.js'\r\nimport {saveNote, addImage, setColor, setText, updateTextBuffer, unDoReDo,updateCurrentNote} from '../../store/note/actions.js'\r\nimport {updateNotes,setCountDeleteNotes} from \"../../store/note-list/actions\";\r\n\r\n\r\n\r\n\r\nclass CurrentNoteContainer extends React.Component {\r\n    render() {\r\n        return       <CurrentNote\r\n            id={this.props.id}\r\n            title={this.props.title}\r\n            text={this.props.text}\r\n            isOpen={this.props.isOpen}\r\n            isEditing={this.props.isEditing}\r\n            color={this.props.color}\r\n            colors={this.props.colors}\r\n            textBuffer={this.props.textBuffer}\r\n            notes={this.props.notes}\r\n            countDeleteNotes={this.props.countDeleteNotes}\r\n\r\n            saveNote={this.props.saveNote}\r\n            addImage={this.props.addImage}\r\n            setColor={this.props.setColor}\r\n            setText={this.props.setText}\r\n            updateTextBuffer={this.props.updateTextBuffer}\r\n            unDoReDo={this.props.unDoReDo}\r\n            updateCurrentNote={this.props.updateCurrentNote}\r\n\r\n            updateNotes={this.props.updateNotes}\r\n            setCountDeleteNotes={this.props.setCountDeleteNotes}\r\n\r\n        />\r\n\r\n\r\n    }\r\n}\r\n//берет из Стейта какие-то значения и передает их в пропсы компонента\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        id: state.note.id,\r\n        title: state.note.title,\r\n        text: state.note.text,\r\n        isOpen:state.note.isOpen,\r\n        isEditing:state.note.isEditing,\r\n        color:state.note.color,\r\n        colors: state.noteList.colors,\r\n        textBuffer: state.note.textBuffer,\r\n        notes:state.noteList.notes,\r\n        countDeleteNotes:state.noteList.countDeleteNotes,\r\n\r\n    };\r\n}\r\n//функция, которая будет наши экшн креэйтеры передавать в пропс\r\nconst mapDispatchToProps = {\r\n\r\n    saveCurrentNote:saveNote,\r\n    addImageCurrentNote: addImage,\r\n    setColor:setColor,\r\n    setText:setText,\r\n    updateTextBuffer:updateTextBuffer,\r\n    unDoReDo:unDoReDo,\r\n    updateCurrentNote:updateCurrentNote,\r\n    updateNotes:updateNotes,\r\n    setCountDeleteNotes:setCountDeleteNotes,\r\n}\r\n\r\n\r\n//привязываем контейнер к реаксу и экспортируем\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CurrentNoteContainer);","import React, {Component} from 'react';\r\nimport NoteMenu from \"../note-menu\";\r\nimport './style.css'\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport CurrentNoteContainer from \"../current-note/current-note-container\";\r\n\r\n\r\n\r\n\r\nclass Note extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.onClickDeleteNote = this.onClickDeleteNote.bind(this);\r\n\r\n       this.handleClose = this.handleClose.bind(this);\r\n       this.handleShow = this.handleShow.bind(this);\r\n\r\n    }\r\n\r\n   handleClose () {\r\n       this.props.updateCurrentNote(this.props.note.id, this.props.note.title, this.props.note.text, this.props.note.color, this.props.note.date, false);\r\n       let notes = this.props.notes.slice();\r\n       let index = this.props.notes.findIndex(item => item.id === this.props.note.id );\r\n       notes[index].isEditing = false;\r\n\r\n       this.props.updateNotes(notes);\r\n\r\n   };\r\n\r\n  handleShow(){\r\n      this.props.updateCurrentNote(this.props.note.id, this.props.note.title, this.props.note.text, this.props.note.color, this.props.note.date, true);\r\n      let notes = this.props.notes.slice();\r\n      let index = this.props.notes.findIndex(item => item.id === this.props.note.id );\r\n      notes[index].isEditing = true;\r\n\r\n      this.props.updateNotes(notes);\r\n\r\n  };\r\n\r\n    onClickDeleteNote() {\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n       var img = this.props.note.img&&(<img src={this.props.note.img} className=\"card-img-top\" alt=\"...\"/>);\r\n\r\n\r\n        return (\r\n            <div className=\"card  \"  >\r\n\r\n                {img}\r\n                <div onClick={this.handleShow} className=\"card-body pb-1\" style={{\"background-color\": this.props.color}}>\r\n\r\n                    <h4 className=\"new-note__input w-100  display-5\">{this.props.note.title}</h4>\r\n                    <pre className=\"new-note__input w-100  h5 display-5\">{this.props.note.text}</pre>\r\n                    <div>\r\n                       <NoteMenu note = {this.props.note} />\r\n                    </div>\r\n                </div>\r\n                <Modal show={this.props.note.isEditing} onHide={this.handleClose} centered size=\"lg\" >\r\n                    <CurrentNoteContainer />\r\n                </Modal>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Note","import React, {Component} from 'react';\r\nimport NewNoteContainer from '../new-note/new-note-container.js'\r\nimport Note from \"../note\";\r\nimport './style.css'\r\n\r\nclass NoteList extends Component {\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let noteGirdClass= this.props.isGirdView? \"article-list__li mt-4 m-3 note-list_view-gird-elem \": \"article-list__li mt-4 m-0 d-block mw-100 flex-fill \";\r\n        let noteListGirdClass = this.props.isGirdView? \" mt-5 d-flex justify-content-start flex-wrap card-body mx-auto p-0 note-list_view-gird\": \"mt-5 d-flex justify-content-start flex-wrap card-body mx-auto p-0 note-list_view-list flex-column   \";\r\n\r\n\r\n         const noteElements = this.props.notes.map((note, index) =>\r\n                <li key = {note.id} className= {noteGirdClass}  >\r\n                    <Note show={note.isEditing} note = {note} notes={this.props.notes} color={this.props.colors.find(item => item.name === note.color ).code} updateCurrentNote = {this.props.updateCurrentNote} updateNotes = {this.props.updateNotes} />\r\n                </li>\r\n          );\r\n//\r\n        return (\r\n            <div className= \"card-body   \"  >\r\n                <div className=\"mx-auto note-list_view-list\"> <NewNoteContainer  /></div>\r\n\r\n                <ul className={noteListGirdClass}>\r\n\r\n                   {noteElements}\r\n\r\n                </ul>\r\n                </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default NoteList\r\n/*\r\nrender() {\r\n\r\n\r\n    const noteElements = this.props.notes.map((note, index) =>\r\n        <li key = {note.id} className=\"article-list__li mt-4 m-3 \" style={{\"width\":\"250px\"}}>\r\n            <Note show={note.isEditing} note = {note} notes={this.props.notes} color={this.props.colors.find(item => item.name === note.color ).code} updateCurrentNote = {this.props.updateCurrentNote} updateNotes = {this.props.updateNotes} />\r\n        </li>\r\n    );\r\n//\r\n    return (\r\n        <div className=\"card-body m-auto\" style={{\"max-width\":\"1200px\"}}>\r\n            <NewNoteContainer  />\r\n            <ul className=\"pl-0 mt-5 d-flex justify-content-start flex-wrap  align-content-stretch  \">\r\n\r\n                {noteElements}\r\n\r\n            </ul>\r\n        </div>\r\n\r\n    );\r\n}\r\n}*/","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport NoteList from \"./index\";\r\nimport {setViewNoteList, updateNotes} from \"../../store/note-list/actions\";\r\nimport {updateCurrentNote} from \"../../store/note/actions\";\r\n\r\n\r\n\r\nclass NoteListContainer extends React.Component {\r\n    render() {\r\n        return       <NoteList\r\n            isGirdView={this.props.isGirdView}\r\n            notes={this.props.notes}\r\n            colors={this.props.colors}\r\n            setViewNoteList={this.props.setViewNoteList}\r\n            updateNotes={this.props.updateNotes}\r\n\r\n            updateCurrentNote={this.props.updateCurrentNote}\r\n\r\n        />\r\n\r\n\r\n    }\r\n}\r\n//берет из Стейта какие-то значения и передает их в пропсы компонента\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        isGirdView: state.noteList.isGirdView,\r\n        notes: state.noteList.notes,\r\n        colors:state.noteList.colors,\r\n    };\r\n}\r\n//функция, которая будет наши экшн креэйтеры передавать в пропс\r\nconst mapDispatchToProps = {\r\n\r\n    setViewNoteList:setViewNoteList,\r\n    updateNotes: updateNotes,\r\n\r\n    updateCurrentNote:updateCurrentNote,\r\n\r\n}\r\n\r\n\r\n//привязываем контейнер к реаксу и экспортируем\r\nexport default connect(mapStateToProps,mapDispatchToProps)(NoteListContainer);","\r\n\r\nimport React from 'react';\r\nimport {render} from 'react-dom';\r\nimport { Provider} from 'react-redux'\r\nimport App from \"./components/app\";\r\nimport {createStore} from \"redux\";\r\nimport rootReducer from \"./store/reducers\";\r\nimport {BrowserRouter,Switch,Route} from \"react-router-dom\";\r\nimport About from \"./components/about\";\r\nimport StatisticsContainer from \"./components/statistic/statistics-container.js\";\r\nimport NoteListContainer  from \"./components/note-list/note-list-container.js\"\r\n\r\n\r\n\r\nconst store = createStore(rootReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nvar mainElem = document.getElementById('root');\r\nrender(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App>\r\n                <Switch>\r\n                    <Route exact path='/' component={NoteListContainer}/>\r\n                    <Route path='/statistics' component={StatisticsContainer}/>\r\n                    <Route path='/about' component={About}/>\r\n                </Switch>\r\n            </App>\r\n        </BrowserRouter>\r\n    </Provider>, mainElem);\r\n\r\n\r\n"],"sourceRoot":""}